{
  "x-generator": "NSwag v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "AzureAI API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/AzureAI": {
      "get": {
        "tags": [
          "AzureAI"
        ],
        "operationId": "FindLanguage",
        "parameters": [
          {
            "name": "InputText",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindLanguagesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/AzureAILanguage/TextAnalyzer": {
      "get": {
        "tags": [
          "AzureAILanguage"
        ],
        "operationId": "AnalyzeText",
        "parameters": [
          {
            "name": "InputText",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyzeTextResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/AzureAILanguage/QnA": {
      "get": {
        "tags": [
          "AzureAILanguage"
        ],
        "operationId": "QnA",
        "parameters": [
          {
            "name": "Question",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QnAResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/AzureAILanguage/LanguageUnderstanding": {
      "get": {
        "tags": [
          "AzureAILanguage"
        ],
        "operationId": "LanguageUnderstanding",
        "parameters": [
          {
            "name": "UserInput",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLanguageUnderstandingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersRegister",
        "requestBody": {
          "x-name": "registration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersLogin",
        "parameters": [
          {
            "name": "useCookies",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "useSessionCookies",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "login",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/refresh": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersRefresh",
        "requestBody": {
          "x-name": "refreshRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/confirmEmail": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetApiUsersConfirmEmail",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "changedEmail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Users/resendConfirmationEmail": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersResendConfirmationEmail",
        "requestBody": {
          "x-name": "resendRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendConfirmationEmailRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Users/forgotPassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersForgotPassword",
        "requestBody": {
          "x-name": "resetRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/resetPassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersResetPassword",
        "requestBody": {
          "x-name": "resetRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/manage/2fa": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersManage2fa",
        "requestBody": {
          "x-name": "tfaRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFactorRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Users/manage/info": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetApiUsersManageInfo",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersManageInfo",
        "requestBody": {
          "x-name": "infoRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfoRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "FindLanguagesResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDocument"
            }
          },
          "modelVersion": {
            "type": "string"
          }
        }
      },
      "ResponseDocument": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "detectedLanguage": {
            "$ref": "#/components/schemas/Language"
          }
        }
      },
      "Language": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "iso6391Name": {
            "type": "string"
          },
          "confidenceScore": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "AnalyzeTextResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "documentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentDetails"
            }
          }
        }
      },
      "DocumentDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "originalText": {
            "type": "string"
          },
          "detectedLanguage": {
            "type": "string"
          },
          "sentiment": {
            "type": "string"
          },
          "keyPhrases": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategorizedEntity"
            }
          },
          "linkedEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedEntity"
            }
          }
        }
      },
      "CategorizedEntity": {
        "type": "object",
        "description": "A word or phrase that was recognized as an entity and categorized accordingly by the service's named entity\nrecognition model and taxonomy. For the list of supported categories and subcategories, see\nhttps://learn.microsoft.com/azure/cognitive-services/language-service/named-entity-recognition/concepts/named-entity-categories.",
        "additionalProperties": false,
        "properties": {
          "text": {
            "type": "string",
            "description": "The text corresponding to the recognized entity, as it appears in the input document.",
            "nullable": true
          },
          "category": {
            "description": "The category of the entity as recognized by the service's named entity recognition model. For the list of\nsupported categories, see\nhttps://learn.microsoft.com/azure/cognitive-services/language-service/named-entity-recognition/concepts/named-entity-categories.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EntityCategory"
              }
            ]
          },
          "subCategory": {
            "type": "string",
            "description": "The subcategory of the entity (if applicable) as recognized by the service's named entity recognition\nmodel. For the list of supported categories and subcategories, see\nhttps://learn.microsoft.com/azure/cognitive-services/language-service/named-entity-recognition/concepts/named-entity-categories.",
            "nullable": true
          },
          "confidenceScore": {
            "type": "number",
            "description": "The score between 0.0 and 1.0 indicating the confidence that the recognized entity accurately corresponds\nto the text substring.",
            "format": "double"
          },
          "offset": {
            "type": "integer",
            "description": "The starting position of the matching text in the input document.",
            "format": "int32"
          },
          "length": {
            "type": "integer",
            "description": "The length of the matching text in the input document.",
            "format": "int32"
          }
        }
      },
      "EntityCategory": {
        "type": "object",
        "description": "Gets the entity category inferred by the Language service's named entity recognition model.\nThe list of available categories is described at \nSupported entity categories in Named Entity Recognition.",
        "additionalProperties": false
      },
      "LinkedEntity": {
        "type": "object",
        "description": "The LinkedEntity. ",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets the formal name of the entity.",
            "nullable": true
          },
          "dataSourceEntityId": {
            "type": "string",
            "description": "Gets the unique identifier of the entity in the data source.",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Gets the language used in the data source.",
            "nullable": true
          },
          "dataSource": {
            "type": "string",
            "description": "Gets the name of the data source used to extract the entity linking.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Gets the URL that identifies the linked entity's entry in the data source.",
            "format": "uri",
            "nullable": true
          },
          "matches": {
            "type": "array",
            "description": "Collection identifying the substrings of the document that correspond\nto this linked entity.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LinkedEntityMatch"
            }
          },
          "bingEntitySearchApiId": {
            "type": "string",
            "description": "Bing Entity Search API unique identifier of the recognized entity.\n           Use in conjunction with the Bing Entity Search API to fetch additional relevant information.\n           ",
            "nullable": true
          }
        }
      },
      "LinkedEntityMatch": {
        "type": "object",
        "description": "The Match. ",
        "additionalProperties": false,
        "properties": {
          "text": {
            "type": "string",
            "description": "Gets the entity text as it appears in the document.",
            "nullable": true
          },
          "confidenceScore": {
            "type": "number",
            "description": "Gets a score between 0 and 1, indicating the confidence that this\nsubstring matches the corresponding linked entity.",
            "format": "double"
          },
          "offset": {
            "type": "integer",
            "description": "Gets the starting position for the matching text in the document.",
            "format": "int32"
          },
          "length": {
            "type": "integer",
            "description": "Gets the length of the matching text in the sentence.",
            "format": "int32"
          }
        }
      },
      "QnAResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KnowledgeBaseAnswer"
            }
          }
        }
      },
      "KnowledgeBaseAnswer": {
        "type": "object",
        "description": "Represents knowledge base answer. ",
        "additionalProperties": false,
        "properties": {
          "questions": {
            "type": "array",
            "description": "List of questions associated with the answer. ",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "answer": {
            "type": "string",
            "description": "Answer text. ",
            "nullable": true
          },
          "confidence": {
            "type": "number",
            "description": "Answer confidence score, value ranges from 0 to 1. ",
            "format": "double",
            "nullable": true
          },
          "qnaId": {
            "type": "integer",
            "description": "ID of the QnA result. ",
            "format": "int32",
            "nullable": true
          },
          "source": {
            "type": "string",
            "description": "Source of QnA result. ",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "description": "Metadata associated with the answer, useful to categorize or filter question answers. ",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "dialog": {
            "description": "Dialog associated with Answer. ",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/KnowledgeBaseAnswerDialog"
              }
            ]
          },
          "shortAnswer": {
            "description": "Answer span object of QnA with respect to user's question. ",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AnswerSpan"
              }
            ]
          }
        }
      },
      "KnowledgeBaseAnswerDialog": {
        "type": "object",
        "description": "Dialog associated with Answer. ",
        "additionalProperties": false,
        "properties": {
          "isContextOnly": {
            "type": "boolean",
            "description": "To mark if a prompt is relevant only with a previous question or not. If true, do not include this QnA as search result for queries without context; otherwise, if false, ignores context and includes this QnA in search result. ",
            "nullable": true
          },
          "prompts": {
            "type": "array",
            "description": "List of prompts associated with the answer. ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/KnowledgeBaseAnswerPrompt"
            }
          }
        }
      },
      "KnowledgeBaseAnswerPrompt": {
        "type": "object",
        "description": "Prompt for an answer. ",
        "additionalProperties": false,
        "properties": {
          "displayOrder": {
            "type": "integer",
            "description": "Index of the prompt - used in ordering of the prompts. ",
            "format": "int32",
            "nullable": true
          },
          "qnaId": {
            "type": "integer",
            "description": "QnA ID corresponding to the prompt. ",
            "format": "int32",
            "nullable": true
          },
          "displayText": {
            "type": "string",
            "description": "Text displayed to represent a follow up question prompt. ",
            "nullable": true
          }
        }
      },
      "AnswerSpan": {
        "type": "object",
        "description": "Answer span object of QnA. ",
        "additionalProperties": false,
        "properties": {
          "text": {
            "type": "string",
            "description": "Predicted text of answer span. ",
            "nullable": true
          },
          "confidence": {
            "type": "number",
            "description": "Predicted score of answer span, value ranges from 0 to 1. ",
            "format": "double",
            "nullable": true
          },
          "offset": {
            "type": "integer",
            "description": "The answer span offset from the start of answer. ",
            "format": "int32",
            "nullable": true
          },
          "length": {
            "type": "integer",
            "description": "The length of the answer span. ",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "CreateLanguageUnderstandingResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userInput": {
            "type": "string"
          },
          "conversationalTaskResult": {
            "type": "string"
          },
          "topIntent": {
            "type": "string"
          },
          "response": {
            "type": "string"
          }
        }
      },
      "HttpValidationProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProblemDetails"
          },
          {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "properties": {
              "errors": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "AccessTokenResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tokenType": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "expiresIn": {
            "type": "integer",
            "format": "int64"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "twoFactorCode": {
            "type": "string",
            "nullable": true
          },
          "twoFactorRecoveryCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "ResendConfirmationEmailRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "resetCode": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "TwoFactorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sharedKey": {
            "type": "string"
          },
          "recoveryCodesLeft": {
            "type": "integer",
            "format": "int32"
          },
          "recoveryCodes": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "isTwoFactorEnabled": {
            "type": "boolean"
          },
          "isMachineRemembered": {
            "type": "boolean"
          }
        }
      },
      "TwoFactorRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enable": {
            "type": "boolean",
            "nullable": true
          },
          "twoFactorCode": {
            "type": "string",
            "nullable": true
          },
          "resetSharedKey": {
            "type": "boolean"
          },
          "resetRecoveryCodes": {
            "type": "boolean"
          },
          "forgetMachine": {
            "type": "boolean"
          }
        }
      },
      "InfoResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "isEmailConfirmed": {
            "type": "boolean"
          }
        }
      },
      "InfoRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "newEmail": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "oldPassword": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}